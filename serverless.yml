service: pizza-boom

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
  logs:
    restApi: true
    httpApi: true
  httpApi:
    authorizers:
      serviceAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl:
          Fn::Join:
            - ''
            - - 'https://cognito-idp.'
              - '${opt:region, self:provider.region}'
              - '.amazonaws.com/'
              - Ref: CognitoUserPoolPizzaBoomUsers
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: arn:aws:dynamodb:*:*:table/${self:service}-${self:provider.stage}-users

package:
  individually: false
  exclude:
    - .git/**
    - .cache/**
    - venv/**
    - node_modules/**
    - .serverless/**

custom:
  config: ${file(settings_default.yml)}
  pythonRequirements:
    dockerizePip: true

plugins:
  - serverless-python-requirements

functions:
  cognitoTriggerPreSignUp:
    handler: pizza_boom/auth/lambda_triggers/trigger_pre_sign_up.handler
    events:
      - cognitoUserPool:
          pool: PizzaBoomUsers
          trigger: PreSignUp

resources:
  Resources:
    dynamoPizzaBoomUsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    CognitoUserPoolPizzaBoomUsers:
      Type: AWS::Cognito::UserPool
      Properties:
        AliasAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        MfaConfiguration: OFF
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false
            RequireUppercase: true
            TemporaryPasswordValidityDays: 14
        Schema:
          - Name: email
            Required: true
            DeveloperOnlyAttribute: false
            Mutable: true
            AttributeDataType: String
          - Name: username
            Required: false
            DeveloperOnlyAttribute: false
            Mutable: true
            AttributeDataType: String
          - Name: dynamo_user_id
            Required: false
            DeveloperOnlyAttribute: false
            Mutable: true
            AttributeDataType: String
        UserPoolName: ${self:service}-${self:provider.stage}-users-pool

    pizzaBoomUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        AllowedOAuthFlows:
          - implicit
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthScopes:
          - email
          - phone
          - openid
          - profile
          - aws.cognito.signin.user.admin
        CallbackURLs:
          - https://google.com
        ClientName: ${self:service}-users-app
        GenerateSecret: false
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        RefreshTokenValidity: 15
        SupportedIdentityProviders:
          - COGNITO
        UserPoolId:
          Ref: CognitoUserPoolPizzaBoomUsers

    pizzaBoomUserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        UserPoolId:
          Ref: CognitoUserPoolPizzaBoomUsers
        Domain: "${self:provider.stage}-users-${self:service}"